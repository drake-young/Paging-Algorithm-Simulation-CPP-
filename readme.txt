*******************************************************
*  Name      :    Drake Young      
*  Class     :    CSCI 3453           
*  Lab#      :    3   
*  Due Date  :    Nov. 28, 2018
*******************************************************


                 Read Me


*******************************************************
*  Description of the program
*******************************************************

 Assignment Description:
	Write a C or C++ program that simulates the operation of 4 page 
	replacement algorithms used in a virtual memory management 
	system:
		1.	FIFO (First-in-First-out) algorithm
		2.	Least Recently Used (LRU) algorithm  
		3.	Most  Frequently Used (MFU) algorithm
		4.	Optimal algorithm 
	You will simulate each algorithm on the input data sets and 
	report the performance of each. A description of each of 
	these algorithms appears in Chapter 10 of our text.

 Assignment Specifications:
	In this lab assignment, you will be calculating the page fault 
	rate of the each different page replacement algorithms for the 
	given page reference string for one processonly. Your program 
	should accept three arguments, which are the number of page 
	frames of the physical memory, the names of an input file, 
	and an output file. The input file contains the page reference 
	string in the order of page request, and the output file stores 
	the display events and the analysis results. You will run each 
	algorithms four times, the first time with 128 page frames, the 
	second time with 256 page frames, the third time with 512 page 
	frames, and the 4th time with 1024 frames.Sample usage is   
			prompt> memsim frame_size input.dat output.dat        
						where 
			1.	frame_size:	no. of page frames in the primary memory
			2.	input.dat:	refers to the input file and  
					NOTE: 
						*	input file must contain only integers
						*	input file must not contain a value >4096
						*	input file must contain no more than 10,000 integers
						*	one integer per line in the input file
			3.	output.dat:	the name of the output file.  


*******************************************************
*  Source files
*******************************************************

Name:  you0254.cpp
   Main program.  This file contains all functions used for the simulation as well as all utility functions
   to perform the simulation
	
Name: input.txt
   contains 10,000 integers representing page requests in a reference stream, the integers are separated one per line
   this is the file that was used to produce the sample output
   
Name: output.txt
   output file generated by the program (name varies based on user input) containing a formatted results table with
   computed statistics for the paging algorithms simulated

*******************************************************
*  Circumstances of programs
*******************************************************

   The program runs successfully.  
   
   The program was developed and tested on gnu g++ 4.4.2.  It was 
   compiled, run, and tested on the CSE Grid


*******************************************************
*  How to build and run the program
*******************************************************

1. Uncompress the homework.  The homework file is compressed.  
   To uncompress and extract it use the following commands 
       % tar -xvzf [you0254.tar.gz]

   Now you should see a directory named you0254 with the files:
        you0254.cpp
	input.txt
        makefile
        readme.txt

2. Build the program.

    Compile the program by:
    % make

3. Run the program by:
   % ./[you0254]

4. Delete the obj files, executables, and core dump by
   %./make clean

